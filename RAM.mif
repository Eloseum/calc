DEPTH = 65536;              	 -- The size of memory in words
WIDTH = 8;                  	 -- The size of data in bits

ADDRESS_RADIX = HEX;         	 -- The radix for address values
DATA_RADIX = HEX;            	 -- The radix for data values

CONTENT                      	 -- start of (address : data pairs)
BEGIN

00 : 21; -- LOAD BASE ADDRESS OF EC,SC,SP,EP
01 : 00;
02 : E5;
 --  BOOTUP SEQUENCE
	-- SOFTWARE RESET
03 : 3E; -- LOAD A WITH LCD COMMAND
04 : 01; -- SLEEP OUT
05 : E0; -- WRITE TO PERIPHERAL
06 : CD; -- PERIPHERAL ADDRESS
07 : CD; -- DELAY SUBROUTINE
08 : 00; -- ADDRESS
09 : ED; -- ADDRESS
	-- TOGGLE EXTENDED COMMANDS
0A : 3E; -- LOAD A WITH LCD COMMAND
0B : 00; -- TOGGLE EXTENDED COMMANDS
0C : E0; -- WRITE TO PERIPHERAL
0D : CD; -- PERIPHERAL ADDRESS
0E : 3E; -- LOAD A WITH LCD COMMAND
0F : FF; -- DATA BYTE 1
10 : E0; -- WRITE TO PERIPHERAL
11 : CD; -- PERIPHERAL ADDRESS
12 : 3E; -- LOAD A WITH LCD COMMAND
13 : 83; -- DATA BYTE 2
14 : E0; -- WRITE TO PERIPHERAL
15 : CD; -- PERIPHERAL ADDRESS
16 : 3E; -- LOAD A WITH LCD COMMAND
17 : 57; -- DATA BYTE 3
18 : E0; -- WRITE TO PERIPHERAL
19 : CD; -- PERIPHERAL ADDRESS
	-- SET INTERNAL OSCILLATOR
1A : 3E; -- LOAD A WITH LCD COMMAND
1B : B0; -- SET INTERNAL OSCILLATOR
1C : E0; -- WRITE TO PERIPHERAL
1D : CD; -- PERIPHERAL ADDRESS
1E : 3E; -- LOAD A WITH DATA BYTE 1
1F : 66; -- DATA
20 : E0; -- WRITE TO PERIPHERAL
21 : CD; -- PERIPHERAL ADDRESS
22 : 3E; -- LOAD A WITH DATA BYTE 2
23 : FF; -- SET INTERNAL OSCILLATOR
24 : E0; -- WRITE TO PERIPHERAL
25 : CD; -- PERIPHERAL ADDRESS
	-- SET PANEL CHARACTERISTIC
26 : 3E; -- LOAD A WITH LCD COMMAND
27 : CC; -- SET PANEL CHARACTERISTIC
28 : E0; -- WRITE TO PERIPHERAL
29 : CD; -- PERIPHERAL ADDRESS
2A : 3E; -- LOAD A WITH DATA BYTE 1
2B : 00; -- DATA
2C : E0; -- WRITE TO PERIPHERAL
2D : CD; -- PERIPHERAL ADDRESS
	-- SLEEP OUT
2E : 3E; -- LOAD A WITH LCD COMMAND
2F : 11; -- SLEEP OUT
30 : E0; -- WRITE TO PERIPHERAL
31 : CD; -- PERIPHERAL ADDRESS
32 : CD; -- DELAY SUBROUTINE
33 : 00; -- ADDRESS
34 : ED; -- ADDRESS
	-- DISPLAY ON
35 : 3E; -- LOAD A WITH LCD COMMAND
36 : 29; -- DISPLAY ON
37 : 00; -- MOV TO A
38 : E0; -- WRITE TO PERIPHERAL
39 : CD; -- PERIPHERAL ADDRESS
-- SET SC, EC
3A : 3E; -- LOAD A WITH LCD COMMAND
3B : 2A; -- COLUMN SET ADDRESS
3C : E0; -- WRITE TO PERIPHERAL
3D : CD; -- LCD CONTROLLER'S ID
3E : 2A; -- UPDATE A WITH SC(15 DOWNTO 8), INCREMENT HL
3F : E0; -- WRITE FIRST DATA BYTE
40 : CD;
41 : 2A; -- UPDATE A WITH SC(7 DOWNTO 0), INCREMENT HL 
42 : E0; -- WRITE SECOND DATA BYTE 
43 : CD;
44 : 2A; -- UPDATE A WITH EC(15 DOWNTO 8), INCREMENT HL 
45 : E0; -- WRITE THIRD DATA BYTE 
46 : CD;
47 : 2A; -- UPDATE A WITH EC(7 DOWNTO 0), INCREMENT HL
48 : E0; -- WRITE FOURTH DATA BYTE
49 : CD;
-- SET SP, EP
4A : 3E; -- LOAD A WITH LCD COMMAND
4B : 2B; -- COLUMN SET ADDRESS
4C : E0; -- WRITE TO PERIPHERAL
4D : CD; -- LCD CONTROLLER'S ID
4E : 2A; -- UPDATE A WITH SP(15 DOWNTO 8), INCREMENT HL
4F : E0; -- WRITE FIRST DATA BYTE
50 : CD;
51 : 2A; -- UPDATE A WITH SP(7 DOWNTO 0), INCREMENT HL 
52 : E0; -- WRITE SECOND DATA BYTE 
53 : CD; 
54 : 2A; -- UPDATE A WITH EP(15 DOWNTO 8), INCREMENT HL 
55 : E0; -- WRITE THIRD DATA BYTE 
56 : CD;
57 : 2A; -- UPDATE A WITH EP(7 DOWNTO 0), INCREMENT HL
58 : E0; -- WRITE FOURTH DATA BYTE
59 : CD;
-- SETUP COLUMN COUNTER
5A : 01; -- LOAD BC WITH 00
5B : 00; -- DATA
5C : 00; -- DATA
-- SETUP PAGE COUNTER
5D : 11; -- LOAD DE WITH 00
5E : 00; -- DATA
5F : 00; -- DATA
-- WRITE TO GRAM (B)
60 : 26; -- LOAD H WITH LCD COMMAND
61 : 2C; -- WRITE TO GRAM
62 : 7C; -- MOV TO A
63 : E0; -- WRITE TO PERIPHERAL
64 : CD;
65 : 26; -- LOAD H WITH R VALUE  0X6D
66 : FF; -- DATA
67 : 7C; -- MOV TO A
68 : E0; -- WRITE TO PERIPHERAL
69 : CD;
6A : 26; -- LOAD H WITH G VALUE  0X6E
6B : 00; -- DATA
6C : 7C; -- MOV TO A
6D : E0; -- WRITE TO PERIPHERAL
6E : CD;
6F : 00; -- LOAD H WITH B VALUE  0X6E
70 : 6E; -- DATA
71 : 7C; -- MOV TO A
72 : E0; -- WRITE TO PERIPHERAL
73 : CD;
-- CHECK FIRST COUNTER
74 : 03; -- INC BC
75 : 3E; -- LOAD 0X3F INTO A
76 : 3F; -- DATA
77 : B9; -- COMPARE A TO C
78 : CA; -- IF EQUAL, PROCEED TO CHECK UPPER BYTE
79 : 00; -- ADDRESS (A)
7A : 7E; -- ADDRESS (A)
7B : C3; -- ELSE, REPEAT WRITE TO GRAM PROCEDURE
7C : 00; -- ADDRESS (B)
7D : 60; -- ADDRESS (B)
		 -- CHECK UPPER BYTE (A)
7E : 3E; -- LOAD 0X01 INTO A
7F : 01; -- DATA
80 : B8; -- COMPARE A TO B
81 : CA; -- IF EQUAL, PROCEED TO CHECK SECOND COUNTER
82 : 00; -- ADDRESS (C)
83 : 87; -- ADDRESS (C)
84 : C3; -- ELSE, REPEAT WRITE TO GRAM PROCEDURE
85 : 00; -- ADDRESS (B)
86 : 60; -- ADDRESS (B)
-- CHECK SECOND COUNTER (C)
87 : 13; -- INC DE
88 : 3E; -- LOAD 0XDF INTO A
89 : DF; -- DATA
8A : BB; -- COMPARE A TO E
8B : CA; -- IF EQUAL, PROCEED TO CHECK UPPER BYTE
8C : 00; -- ADDRESS (D)
8D : 91; -- ADDRESS (D)
8E : CD; -- ELSE, ZERO COLUMN POINTER
8F : 00; -- ADDRESS
90 : DF; -- ADDRESS
		 -- CHECK UPPER BYTE (D)
91 : 3E; -- LOAD 0X01 INTO A
92 : 01; -- DATA
93 : BA; -- COMPARE A TO D
94 : CA; -- IF EQUAL, PROCEED TO DRAW INTERFACE II (-- END OF PROGRAM --)
95 : 00; -- ADDRESS
96 : 97; -- ADDRESS
-- DRAW BUTTON 1
	-- NOP
97 : 06; -- LOAD B WITH LCD COMMAND
98 : 00; -- NOP
99 : 78; -- MOV TO A
9A : E0; -- WRITE TO PERIPHERAL
9B : CD; -- PERIPHERAL ADDRESS
	-- SETUP COLUMN COUNTER
9C : 01; -- LOAD BC WITH 00
9D : 00; -- DATA
9E : 00; -- DATA
		 -- SETUP PAGE COUNTER
9F : 11; -- LOAD DE WITH 00
A0 : 00; -- DATA
A1 : 00; -- DATA
	-- SET SC, EC
A2 : 06; -- LOAD B WITH LCD COMMAND
A3 : 2A; -- COLUMN SET ADDRESS
A4 : 78; -- MOV TO A
A5 : E0; -- WRITE TO PERIPHERAL
A6 : CD; -- LCD CONTROLLER'S ID
A7 : 3E; -- UPDATE A WITH SC(15 DOWNTO 8), INCREMENT HL
A8 : 00; -- DATA
A9 : E0; -- WRITE FIRST DATA BYTE
AA : CD;
AB : 3E; -- UPDATE A WITH SC(7 DOWNTO 0), INCREMENT HL 
AC : 05; -- DATA
AD : E0; -- WRITE SECOND DATA BYTE 
AE : CD; 
AF : 3E; -- UPDATE A WITH EC(15 DOWNTO 8), INCREMENT HL 
B0 : 00; -- DATA
B1 : E0; -- WRITE THIRD DATA BYTE 
B2 : CD;
B3 : 3E; -- UPDATE A WITH EC(7 DOWNTO 0), INCREMENT HL
B4 : 4A; -- DATA
B5 : E0; -- WRITE FOURTH DATA BYTE
B6 : CD;
	-- WRITE TO GRAM
B7 : 26; -- LOAD H WITH LCD COMMAND
B8 : 2C; -- WRITE TO GRAM
B9 : 7C; -- MOV TO A
BA : E0; -- WRITE TO PERIPHERAL
BB : CD;
BC : 26; -- LOAD H WITH R VALUE  0X6D
BD : 00; -- DATA
BE : 7C; -- MOV TO A
BF : E0; -- WRITE TO PERIPHERAL
C0 : CD;
C1 : 26; -- LOAD H WITH G VALUE  0X6E
C2 : FF; -- DATA
C3 : 7C; -- MOV TO A
C4 : E0; -- WRITE TO PERIPHERAL
C5 : CD;
C6 : 26; -- LOAD H WITH B VALUE  0X6E
C7 : 00; -- DATA
C8 : 7C; -- MOV TO A
C9 : E0; -- WRITE TO PERIPHERAL
CA : CD;
	-- CHECK FIRST COUNTER
CB : 03; -- INC BC
CC : 3E; -- LOAD 0X45 INTO A
CD : 3F; -- DATA
CE : B9; -- COMPARE A TO C
CF : CA; -- IF EQUAL, PROCEED TO CHECK SECOND COUNTER
D0 : 00; -- ADDRESS
D1 : D5; -- ADDRESS
D2 : C3; -- ELSE, REPEAT WRITE TO GRAM PROCEDURE
D3 : 00; -- ADDRESS
D4 : B7; -- ADDRESS
	-- CHECK SECOND COUNTER
D5 : 13; -- INC DE
D6 : 3E; -- LOAD 0X39 INTO A
D7 : DF; -- DATA
D8 : BB; -- COMPARE A TO E
D9 : CA; -- IF EQUAL, PROCEED TO DRAW SECOND BUTTON (-- END OF PROGRAM --)
DA : 00; -- ADDRESS
DB : D9; -- ADDRESS
DC : C3; -- ELSE, ZERO COLUMN POINTER
DD : 00; -- ADDRESS
DE : DF; -- ADDRESS
-- ZERO THE COLUMN COUNTER
DF : 01; -- LOAD BC WITH 00
E0 : 00; -- DATA
E1 : 00; -- DATA
E2 : C9; -- RETURN TO PROGRAM
E3 : 00; -- FILLER
E4 : 49; -- FILLER
-- FULL SCREEN POINTERS
E5 : 00; -- SC(15 DOWNTO 8)
E6 : 00; -- SC(7 DOWNTO 0)
E7 : 01; -- EC(15 DOWNTO 8)
E8 : 3F; -- EC(7 DOWNTO 0)
E9 : 00; -- SP(15 DOWNTO 8)
EA : 00; -- SP(7 DOWNTO 0)
EB : 01; -- EP(15 DOWNTO 8)
EC : DF; -- EP(7 DOWNTO 0)
-- DELAY
ED : 01; -- ZERO BC
EE : 00; -- DATA
EF : 00; -- DATA
F0 : 3E; -- LD A
F1 : 0F; -- DATA
F2 : 03; -- INC BC
F3 : B8; -- COMPARE A AND B
F4 : C2; -- IF NOT EQUAL, INCREMENT AGAIN
F5 : 00; -- ADDRESS
F6 : F2; -- ADDRESS
F7 : 3E; -- LD A
F8 : FF; -- DATA
F9 : B9; -- COMPARE A AND C
FA : C8; -- IF Z, RETURN TO PROGRAM
FB : C3; -- ELSE, RETURN TO LOOP
FC : 00; -- ADDRESS
FD : F0; -- ADDRESS
[FE..FFFF] : 00;

END;